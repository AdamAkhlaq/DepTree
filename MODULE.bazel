"Bazel module configuration file for DepTree project."

module(
    name = "deptree",
    version = "0.1.0",
)

bazel_dep(name = "rules_java", version = "8.14.0")

java_toolchains = use_extension("@rules_java//java:extensions.bzl", "toolchains")
use_repo(java_toolchains, "remotejdk17_linux", "remotejdk17_macos", "remotejdk17_win")

bazel_dep(name = "rules_jvm_external", version = "6.8")

maven = use_extension("@rules_jvm_external//:extensions.bzl", "maven")
maven.install(
    artifacts = [
        "com.amazonaws:aws-lambda-java-core:1.2.3",
        "com.amazonaws:aws-lambda-java-events:3.11.4",
        "com.fasterxml.jackson.core:jackson-databind:2.16.1",
        "com.fasterxml.jackson.core:jackson-core:2.16.1",
        "com.fasterxml.jackson.core:jackson-annotations:2.16.1",
        "org.junit.jupiter:junit-jupiter-api:5.10.1",
        "org.junit.jupiter:junit-jupiter-engine:5.10.1",
        "org.mockito:mockito-core:5.8.0",
    ],
    repositories = [
        "https://repo1.maven.org/maven2",
    ],
)
use_repo(maven, "maven")

bazel_dep(name = "rules_nodejs", version = "6.4.0")

node = use_extension("@rules_nodejs//nodejs:extensions.bzl", "node")
node.toolchain(node_version = "20.11.0")
use_repo(node, "nodejs_toolchains")

npm = use_extension("@rules_nodejs//npm:extensions.bzl", "npm", dev_dependency = True)
npm.npm_translate_lock(
    name = "npm",
    pnpm_lock = "//:pnpm-lock.yaml",
    verify_node_modules_ignored = "//:.bazelignore",
)
use_repo(npm, "npm")

bazel_dep(
    name = "buildifier_prebuilt",
    version = "8.2.0.2",
    dev_dependency = True,
)
